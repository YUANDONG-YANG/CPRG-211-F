@page "/employee"
@using EmployeeManager.Services
@using EmployeeManager.Models
@inject ManagerDbAccessor managerDbAccessor
@inject NavigationManager NavigationManager

<div class="page-container">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h3 class="mb-0"><i class="bi bi-people-fill me-2"></i>Employee Management</h3>
            <p class="text-muted mb-0">Manage your organization's personnel</p>
        </div>
        <button class="btn btn-success" @onclick="AddEmployee">
            <i class="bi bi-person-plus-fill me-1"></i> Add Employee
        </button>
    </div>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger d-flex align-items-center mb-4" role="alert">
            <i class="bi bi-exclamation-triangle-fill me-2"></i>
            <div>@errorMessage</div>
            <button type="button" class="btn-close ms-auto" @onclick="ClearError" aria-label="Close"></button>
        </div>
    }

    <div class="card">
        <div class="card-body p-0">
            @if (employees.Count == 0)
            {
                <div class="text-center py-5">
                    <i class="bi bi-people text-muted" style="font-size: 3rem;"></i>
                    <h5 class="mt-3">No Employees Found</h5>
                    <p class="text-muted">Start by adding your first employee</p>
                    <button class="btn btn-primary mt-2" @onclick="AddEmployee">
                        <i class="bi bi-person-plus-fill me-1"></i> Add Employee
                    </button>
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead class="table-light">
                            <tr>
                                <th>ID</th>
                                <th>Full Name</th>
                                <th>Department</th>
                                <th>Contact</th>
                                <th>Employment</th>
                                <th>Wage Grade</th>
                                <th class="text-center">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var employee in employees)
                            {
                                <tr class="@(employee.fire_date.HasValue ? "table-secondary" : "")">
                                    <td>@employee.emp_id</td>
                                    <td>
                                        <div class="fw-semibold">@employee.firstname @employee.lastname</div>
                                    </td>
                                    <td>
                                        <span class="badge bg-info text-dark">@employee.dept_name</span>
                                    </td>
                                    <td>
                                        <div class="small">
                                            <div><i class="bi bi-telephone me-1"></i> @employee.phone</div>
                                            <div><i class="bi bi-envelope me-1"></i> @employee.email</div>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="small">
                                            <div>
                                                <i class="bi bi-calendar-check me-1"></i>
                                                @(employee.hire_date.HasValue ? employee.hire_date.Value.ToString("yyyy-MM-dd") : "-")
                                            </div>
                                            @if (employee.fire_date.HasValue)
                                            {
                                                <div>
                                                    <i class="bi bi-calendar-x me-1"></i>
                                                    <span class="text-danger">@employee.fire_date.Value.ToString("yyyy-MM-dd")</span>
                                                </div>
                                            }
                                            else
                                            {
                                                <div><span class="badge bg-success">Active</span></div>
                                            }
                                        </div>
                                    </td>
                                    <td>
                                        <span class="badge bg-primary">@employee.grade_name</span>
                                    </td>
                                    <td>
                                        <div class="d-flex justify-content-center">
                                            <button class="btn btn-sm btn-outline-primary me-2" @onclick="@(() => EditEmployee(employee.emp_id))">
                                                <i class="bi bi-pencil"></i> Edit
                                            </button>
                                            <button class="btn btn-sm btn-outline-danger" @onclick="@(() => ConfirmDelete(employee))">
                                                <i class="bi bi-trash"></i> Delete
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>

    <div class="mt-4">
        <div class="d-flex align-items-center">
            <span class="me-2">Legend:</span>
            <span class="badge bg-success me-2">Active</span>
            <span class="text-muted me-3">Currently employed</span>
            <span class="badge bg-secondary me-2">Inactive</span>
            <span class="text-muted">Employment terminated</span>
        </div>
    </div>
</div>

@if (showDeleteConfirm)
{
    <div class="modal-backdrop fade show"></div>
    <div class="modal fade show d-block" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirm Delete</h5>
                    <button type="button" class="btn-close" @onclick="() => showDeleteConfirm = false" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to permanently delete employee "<strong>@employeeToDelete?.firstname @employeeToDelete?.lastname</strong>"?</p>
                    <p class="text-danger"><small>This action cannot be undone. All employee data will be permanently removed.</small></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="() => showDeleteConfirm = false">Cancel</button>
                    <button type="button" class="btn btn-danger" @onclick="ConfirmedDelete">
                        <i class="bi bi-trash me-1"></i> Delete
                    </button>
                </div>
            </div>
        </div>
    </div>
}

<style>
    .page-container {
        padding: 1.5rem 1rem;
    }

    .card {
        border-radius: 8px;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.08);
        border: none;
        overflow: hidden;
    }

    .table thead th {
        font-weight: 600;
        border-top: none;
        border-bottom-width: 1px;
    }

    .table tbody tr:last-child td {
        border-bottom: none;
    }

    .btn-success {
        background-color: #28a745;
        border-color: #28a745;
    }

        .btn-success:hover {
            background-color: #218838;
            border-color: #1e7e34;
        }

    .btn-outline-primary {
        color: #007bff;
        border-color: #007bff;
    }

        .btn-outline-primary:hover {
            background-color: #007bff;
            color: white;
        }

    .btn-outline-danger {
        color: #dc3545;
        border-color: #dc3545;
    }

        .btn-outline-danger:hover {
            background-color: #dc3545;
            color: white;
        }

    .badge {
        font-weight: 500;
        padding: 0.35em 0.65em;
    }
</style>

@code {
    private List<Employee> employees = new();
    private string errorMessage;
    private bool showDeleteConfirm = false;
    private Employee employeeToDelete;

    protected override void OnInitialized()
    {
        LoadEmployees();
    }

    private void LoadEmployees()
    {
        try
        {
            employees = managerDbAccessor.GetEmployees();
        }
        catch (Exception ex)
        {
            errorMessage = $"Error loading employees: {ex.Message}";
        }
    }

    private void AddEmployee()
    {
        NavigationManager.NavigateTo("/addEmployee");
    }

    private void EditEmployee(int id)
    {
        NavigationManager.NavigateTo($"/editEmployee/{id}");
    }

    private void ConfirmDelete(Employee employee)
    {
        employeeToDelete = employee;
        showDeleteConfirm = true;
    }

    private void ConfirmedDelete()
    {
        try
        {
            managerDbAccessor.DeleteEmployee(employeeToDelete.emp_id);
            showDeleteConfirm = false;
            LoadEmployees();
        }
        catch (Exception ex)
        {
            errorMessage = $"Error deleting employee: {ex.Message}";
            showDeleteConfirm = false;
        }
    }

    private void ClearError()
    {
        errorMessage = null;
    }
}