@page "/addwage"
@using EmployeeManager.Services
@using EmployeeManager.Models
@inject ManagerDbAccessor managerDbAccessor
@inject NavigationManager NavigationManager

<div class="page-container">
    <div class="card form-card">
        <div class="card-header">
            <h3 class="card-title">
                <i class="bi bi-cash-stack me-2"></i>Add New Wage Grade
            </h3>
        </div>
        <div class="card-body">
            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="alert alert-danger d-flex align-items-center" role="alert">
                    <i class="bi bi-exclamation-triangle-fill me-2"></i>
                    <div>@errorMessage</div>
                </div>
            }

            <EditForm Model="@newWage" OnValidSubmit="HandleValidSubmit">
                <div class="mb-4">
                    <label class="form-label fw-semibold">Grade Name</label>
                    <div class="input-group">
                        <span class="input-group-text"><i class="bi bi-tag"></i></span>
                        <InputText class="form-control" @bind-Value="newWage.grade_name" placeholder="Enter grade name (e.g. Junior, Senior)" />
                    </div>
                    <small class="form-text text-muted">Use a descriptive name for this wage grade</small>
                </div>

                <div class="mb-4">
                    <label class="form-label fw-semibold">Base Wage</label>
                    <div class="input-group">
                        <span class="input-group-text"><i class="bi bi-currency-dollar"></i></span>
                        <InputNumber class="form-control" @bind-Value="newWage.base_wage" placeholder="Enter base wage amount" />
                    </div>
                    <small class="form-text text-muted">Base wage must be greater than zero</small>
                </div>

                <div class="mb-4">
                    <label class="form-label fw-semibold">Bonus Percentage</label>
                    <div class="input-group">
                        <span class="input-group-text"><i class="bi bi-percent"></i></span>
                        <InputNumber class="form-control" @bind-Value="newWage.bonus_percent" placeholder="Enter bonus percentage" />
                        <span class="input-group-text">%</span>
                    </div>
                    <small class="form-text text-muted">Percentage of base wage added as bonus</small>
                </div>

                <div class="wage-preview p-3 mb-4 rounded">
                    <h5><i class="bi bi-calculator me-2"></i>Wage Preview</h5>
                    <div class="row mt-3">
                        <div class="col-md-4">
                            <div class="preview-item">
                                <div class="preview-label">Grade:</div>
                                <div class="preview-value">@(string.IsNullOrEmpty(newWage.grade_name) ? "-" : newWage.grade_name)</div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="preview-item">
                                <div class="preview-label">Base:</div>
                                <div class="preview-value">$@(newWage.base_wage > 0 ? newWage.base_wage.ToString("F2") : "0.00")</div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="preview-item">
                                <div class="preview-label">With Bonus:</div>
                                <div class="preview-value">$@(CalculateTotal().ToString("F2"))</div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="d-flex justify-content-between mt-4">
                    <button type="button" class="btn btn-outline-secondary" @onclick="Cancel">
                        <i class="bi bi-arrow-left me-1"></i> Cancel
                    </button>
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-save me-1"></i> Save Wage Grade
                    </button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

<style>
    .page-container {
        max-width: 700px;
        margin: 0 auto;
        padding: 1.5rem 1rem;
    }

    .form-card {
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        border: none;
    }

    .card-header {
        background: linear-gradient(to right, #11998e, #38ef7d);
        color: white;
        border-top-left-radius: 8px !important;
        border-top-right-radius: 8px !important;
        padding: 1rem 1.25rem;
    }

    .card-title {
        margin-bottom: 0;
        font-weight: 600;
    }

    .wage-preview {
        background-color: #f8f9fa;
        border: 1px solid #e9ecef;
    }

    .preview-item {
        display: flex;
        flex-direction: column;
        align-items: center;
        text-align: center;
    }

    .preview-label {
        font-size: 0.9rem;
        color: #6c757d;
        margin-bottom: 5px;
    }

    .preview-value {
        font-size: 1.1rem;
        font-weight: 600;
        color: #212529;
    }

    .input-group {
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.04);
    }

    .form-control:focus {
        border-color: #11998e;
        box-shadow: 0 0 0 0.25rem rgba(17, 153, 142, 0.25);
    }

    .btn-primary {
        background-color: #11998e;
        border-color: #11998e;
    }

        .btn-primary:hover {
            background-color: #0e8079;
            border-color: #0e8079;
        }
</style>

@code {
    private Wage newWage = new();
    private string errorMessage;

    private void HandleValidSubmit()
    {
        try
        {
            managerDbAccessor.AddWage(newWage);
            NavigationManager.NavigateTo("/wages");
        }
        catch (Exception ex)
        {
            errorMessage = $"Failed to add wage: {ex.Message}";
        }
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/wages");
    }

    private decimal CalculateTotal()
    {
        if (newWage.base_wage <= 0)
            return 0;

        return newWage.base_wage + (newWage.base_wage * newWage.bonus_percent / 100);
    }
}